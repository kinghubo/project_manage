<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE web-app
    PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
    "http://java.sun.com/dtd/web-app_2_3.dtd">
<web-app>
	<display-name>项目管理系统</display-name>
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>/WEB-INF/classes/log4j.properties</param-value>
	</context-param>
	<!-- 
		如果采用分布式部署，使用远程调用的方式，则可以把下面关于Spring的配置全部注释掉；
		如果是直接调用，则需要打开。
	 -->
	<!-- 加载Spring配置XML文件 -->
	<!-- 
	 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			classpath:/config/applicationContext*.xml
		</param-value>
	</context-param>
	 
	 <filter>
	 	<filter-name>sessionFilter</filter-name>
	 	<filter-class>com.taogongbao.filter.SessionFilter</filter-class>
	 </filter>
	 
	 <filter-mapping>
	 	<filter-name>sessionFilter</filter-name>
	 	<url-pattern>/index.jsp</url-pattern>
	 </filter-mapping>
	 
	<!-- 以下是Struts的相关配置 -->
	<filter>
		<filter-name>struts2</filter-name>
		<filter-class>
			org.apache.struts2.dispatcher.FilterDispatcher
		</filter-class>
		<init-param>
			<param-name>config</param-name>
			<param-value>
				struts-default.xml,struts-plugin.xml,config/struts.xml
			</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>struts2</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<!-- 
	<filter>
		<filter-name>struts-cleanup</filter-name>
		<filter-class>
			org.apache.struts2.dispatcher.ActionContextCleanUp
		</filter-class>
	</filter>
	 -->
	 
	<!-- 以下是Spring的相关配置 -->
	<!-- 编码转换 -->
	<!-- 
		 -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>
			org.springframework.web.filter.CharacterEncodingFilter
		</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<!--
		Servlet2.3过滤器，用来把一个Hibernate Session和一次完整的请求过程对应的线程相绑定。目的是为了实现"Open
		Session in View"的模式。
	-->
	<!-- 
	 -->
	<filter>
		<filter-name>lazyLoadingFilter</filter-name>
		<filter-class>
			org.springframework.orm.hibernate3.support.OpenSessionInViewFilter
		</filter-class>
		<init-param>
			<param-name>singleSession</param-name>
			<param-value>false</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>lazyLoadingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<!-- 启动Spring -->
	<!-- 
	 -->
	<listener>
		<listener-class>
			org.springframework.web.context.ContextLoaderListener
		</listener-class>
	</listener>
	<!-- 防止内存泄漏，监听服务器关闭或刷新缓存时对以前保存的信息进行清除 -->
	<!--
	 -->
	<listener>
		<listener-class>
			org.springframework.web.util.IntrospectorCleanupListener
		</listener-class>
	</listener>
	<!-- 基于LocalThread将HTTP request对象绑定到为该请求提供服务的线程上,使具有request和session作用域的bean能够在后面的调用链中被访问到-->
	<!-- Servlet 2.4以下改为org.springframework.web.filter.RequestContextFilter-->
	<!-- 
	 -->
	<listener>
		<listener-class>
			org.springframework.web.context.request.RequestContextListener
		</listener-class>
	</listener>
	<session-config>
		<session-timeout>30</session-timeout>
	</session-config>
	
	<!-- The Welcome File List -->
	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>
</web-app>